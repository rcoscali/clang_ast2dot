TranslationUnitDecl 0x1979690 <<invalid sloc>>
|-DeclStmt 0x197a200 <line:3:2, col:14>
| |-VarDecl 0x197a100 <col:2, col:6> b 'int'
| `-VarDecl 0x197a170 <col:2, col:13> c 'int'
|   `-IntegerLiteral 0x197a1c8 <col:13> 'int' 1
|-BinaryOperator 0x197a2e8 <line:5:2, col:10> 'int' '='
| |-DeclRefExpr 0x197a218 <col:2> 'int' lvalue Var 0x197a100 'b' 'int'
| `-BinaryOperator 0x197a2c0 <col:6, col:10> 'int' '*'
|   |-ImplicitCastExpr 0x197a290 <col:6> 'int' <LValueToRValue>
|   | `-DeclRefExpr 0x197a240 <col:6> 'int' lvalue Var 0x197a170 'c' 'int'
|   `-ImplicitCastExpr 0x197a2a8 <col:10> 'int' <LValueToRValue>
|     `-DeclRefExpr 0x197a268 <col:10> 'int' lvalue ParmVar 0x1979f80 'a' 'int'
`-ForStmt 0x19a6888 <line:6:2, line:7:17>
  |-DeclStmt 0x197a398 <line:6:7, col:16>
  | `-VarDecl 0x197a320 <col:7, col:15> n 'int'
  |   `-IntegerLiteral 0x197a378 <col:15> 'int' 0
  |-<<<NULL>>>
  `-BinaryOperator 0x19a6698 <col:18, col:26> 'int' '<'
    |-ImplicitCastExpr 0x19a6680 <col:18> 'int' <LValueToRValue>
    | `-DeclRefExpr 0x19a65d0 <col:18> 'int' lvalue Var 0x197a320 'n' 'int'
    `-BinaryOperator 0x19a6658 <col:22, col:26> 'int' '+'
      |-ImplicitCastExpr 0x19a6640 <col:22> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x19a65f8 <col:22> 'int' lvalue Var 0x197a170 'c' 'int'
      `-IntegerLiteral 0x19a6620 <col:26> 'int' 5
